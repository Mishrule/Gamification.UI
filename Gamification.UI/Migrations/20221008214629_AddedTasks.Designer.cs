// <auto-generated />
using Gamification.UI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gamification.UI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221008214629_AddedTasks")]
    partial class AddedTasks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gamification.UI.Data.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StepNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "click on complete for 5 points double click for 10 points",
                            StepNumber = "Step 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "click on complete for 5 points double click for 10 points",
                            StepNumber = "Step 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "click on complete for 5 points double click for 10 points",
                            StepNumber = "Step 3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "click on complete for 5 points double click for 10 points",
                            StepNumber = "Step 4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "click on complete for 5 points double click for 10 points",
                            StepNumber = "Step 5"
                        });
                });

            modelBuilder.Entity("Gamification.UI.Data.TasksResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("RespondantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TasksId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TasksId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("Gamification.UI.Data.TasksResponse", b =>
                {
                    b.HasOne("Gamification.UI.Data.Tasks", "Tasks")
                        .WithMany()
                        .HasForeignKey("TasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
